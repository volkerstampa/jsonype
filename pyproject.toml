[tool.poetry]
name = "jsonype"
version = "0"  # ignored
description = "A package for converting classes with type hints to/from JSON"
homepage = "https://github.com/volkerstampa/jsonype"
authors = ["Volker Stampa <Volker.Stampa@gmx.net>"]
maintainers = ["Volker Stampa <Volker.Stampa@gmx.net>"]
readme = "README.md"
license = "Apache-2.0"
keywords = ["json"]
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: Apache Software License",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Software Development :: Libraries",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.setuptools_scm]
version_file = "jsonype/_version.py"
local_scheme = "poetry_setuptools_scm_plugin:no_local_scheme"

[tool.pydocstyle]
ignore = "D100,D101,D102,D103,D104,D105,D107,D203,D213,D410,D411,D406,D413,D407"

[tool.mypy]
cache_dir = "build/.mypy_cache"
strict = "True"
files = "jsonype,tests"

[tool.isort]
line_length = 100
src_paths = ["jsonype", "tests"]

[tool.pylint."messages control"]
enable = "all"
disable = [
    # spelling is disabled by default (no dict specified)
    # to avoid that pylint complains about useless wrong-spelling-in-docstring
    # disable useless-supression
    # this setup makes pylint work in environments where no enchant lib is installed
    # if spelling-dict is in this config file set to "en" instead, it might become
    # impossible to start pylint as it complains about missing dict "en" even if this
    # is overwritten on commandline
    "useless-suppression",
    "invalid-name",
    "missing-module-docstring", "missing-function-docstring", "missing-class-docstring",
    "suppressed-message", "locally-disabled"
]
ignore = ["docs"]
recursive = true
evaluation = "10.0 - ((float(5 * error + warning + refactor + convention + info) / statement) * 10)"

[tool.pylint.spelling]
spelling-private-dict-file = ".pylint-spell-dictionary"

[tool.pylint.main]
jobs = 0

[tool.vulture]
min_confidence = 61
paths = ["jsonype", "tests"]

[tool.flake8]
max-line-length = 100

[tool.ruff]
line-length = 100
cache-dir = "build/ruff_cache"
exclude = ["docs"]

[tool.ruff.lint]
select = ["ALL"]
ignore = ["D100", "D101", "D102", "D103", "D104", "D105", "D107", "D203", "D213",
    "D406", "D407", "D410", "D411", "D413",
    "ARG002",
    "ANN401",
    "S101", "S311", 
    "FA102",
    "COM812",
    "FBT001", "FBT002",
    "PLC0414",
    "RUF100",
    "FA100",
    "I001",
    "PT013",
    "PYI042"]
# pylint: E, R, pyflakes: W, vulture: V
external = ["E", "R", "W", "V"]

[tool.pytest.ini_options]
cache_dir = "build/pytest_cache"

[tool.poetry.dependencies]
python = "^3.11"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.1"
mypy = "^1.10.0"
sphinx = ">=7.3.7,<9.0.0"
pycodestyle = "^2.12.0"
mccabe ="^0.7.0"
pydocstyle = "^6.3.0"
pylint = {extras = ["spelling"], version = "^3.3.8"}
toml = "^0.10.2"
vulture = "^2.11"
eradicate = ">=2.3,<4.0"
sphinx-rtd-theme = ">=2,<4"
setuptools = ">=70.1,<81.0"
ruff = ">=0.4.10,<0.14.0"
pyenchant = "^3.2.2"
flake8 = "^7.3.0"
flake8-pyproject = "^1.2.3"
flake8-eradicate = "^1.5.0"
